{"version":3,"sources":["index.js"],"names":["scene","THREE","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","updateCamera","aspect","updateProjectionMatrix","position","z","setClearColor","document","body","appendChild","domElement","addEventListener","raycaster","mouse","YellowBox","Object","_Users_mathieuaudebert_code_three_js_experiment_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","geometry","material","color","mesh","i","x","Math","random","y","add","light1","set","light2","render","requestAnimationFrame","event","preventDefault","clientX","clientY","setFromCamera","intersects","intersectObjects","children","length","object","timeline","TimelineMax","to","scale","ease","Power1","easeOut","easeInOut","rotation","PI"],"mappings":"0JAKMA,QAAQ,IAAIC,KACZC,EAAS,IAAID,IAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KACtFC,EAAW,IAAIL,IAAoB,CAAEM,WAAW,IAEtD,SAASC,IACPF,EAASE,QAAQL,OAAOC,WAAYD,OAAOE,aAG7C,SAASI,IACPD,IACAN,EAAOQ,OAASP,OAAOC,WAAaD,OAAOE,YAE3CH,EAAOS,yBAIPT,EAAOU,SAASC,EAAI,EACpBP,EAASQ,cAAc,WAEvBC,SAASC,KAAKC,YAAYX,EAASY,YACnCf,OAAOgB,iBAAiB,SAAUV,GAElCD,IAkBF,IAZA,IAAMY,EAAY,IAAInB,IAChBoB,EAAQ,IAAIpB,IAEZqB,EACJ,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbG,KAAKC,SAAW,IAAIzB,IAAkB,EAAG,EAAG,GAC5CwB,KAAKE,SAAW,IAAI1B,IAA0B,CAAE2B,MAAO,WACvDH,KAAKI,KAAO,IAAI5B,IAAWwB,KAAKC,SAAUD,KAAKE,WAK1CG,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,KACtBD,GAAS,IAAIP,GAAbO,KAERA,EAAKjB,SAASmB,EAA4B,IAAvBC,KAAKC,SAAW,IACnCJ,EAAKjB,SAASsB,EAA4B,IAAvBF,KAAKC,SAAW,IACnCJ,EAAKjB,SAASC,EAA4B,IAAvBmB,KAAKC,SAAW,IAEnCjC,EAAMmC,IAAIN,GAIZ,IAAMO,EAAS,IAAInC,IAAiB,SAAU,EAAG,KAEjDmC,EAAOxB,SAASyB,IAAI,EAAG,EAAG,GAC1BrC,EAAMmC,IAAIC,GAEV,IAAME,EAAS,IAAIrC,IAAiB,SAAU,EAAG,KAEjDqC,EAAO1B,SAASyB,IAAI,EAAG,EAAG,IAC1BrC,EAAMmC,IAAIG,GAGV,SAASC,IACPC,sBAAsBD,GAEtBjC,EAASiC,OAAOvC,EAAOE,GAwBzBqC,GAEApC,OAAOgB,iBAAiB,QAvBxB,SAAqBsB,GACnBA,EAAMC,iBAENrB,EAAMU,EAAKU,EAAME,QAAUxC,OAAOC,WAAc,EAAI,EACpDiB,EAAMa,GAAMO,EAAMG,QAAUzC,OAAOE,YAAe,EAAI,EAEtDe,EAAUyB,cAAcxB,EAAOnB,GAI/B,IAFA,IAAM4C,EAAa1B,EAAU2B,iBAAiB/C,EAAMgD,UAAU,GAErDlB,EAAI,EAAGA,EAAIgB,EAAWG,OAAQnB,GAAK,EAAG,KACrCoB,EAAWJ,EAAWhB,GAAtBoB,OACFC,EAAW,IAAIC,IAErBD,EAASE,GAAGH,EAAOI,MAAO,EAAG,CAAEvB,EAAG,EAAGwB,KAAMC,IAAOC,UAClDN,EAASE,GAAGH,EAAOI,MAAO,GAAK,CAAEvB,EAAG,GAAKwB,KAAMC,IAAOE,YACtDP,EAASE,GAAGH,EAAOtC,SAAU,GAAK,CAAEmB,EAAG,EAAGwB,KAAMC,IAAOC,UACvDN,EAASE,GAAGH,EAAOS,SAAU,GAAK,CAAEzB,EAAa,GAAVF,KAAK4B,GAAUL,KAAMC,IAAOC,SAAW","file":"static/js/main.3d403e8d.chunk.js","sourcesContent":["import * as THREE from 'three';\nimport { Power1, TimelineMax } from 'gsap';\n\nimport './main.css';\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\n\nfunction setSize() {\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction updateCamera() {\n  setSize();\n  camera.aspect = window.innerWidth / window.innerHeight;\n\n  camera.updateProjectionMatrix();\n}\n\nfunction init() {\n  camera.position.z = 5;\n  renderer.setClearColor('#efefef');\n\n  document.body.appendChild(renderer.domElement);\n  window.addEventListener('resize', updateCamera);\n\n  setSize();\n}\n\ninit();\n\n// handling mouse position\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\nclass YellowBox {\n  constructor() {\n    this.geometry = new THREE.BoxGeometry(1, 1, 1);\n    this.material = new THREE.MeshLambertMaterial({ color: 0xfefefe });\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n  }\n}\n\n// add some yellow boxes\nfor (let i = 0; i < 15; i += 1) {\n  const { mesh } = new YellowBox();\n\n  mesh.position.x = (Math.random() - 0.5) * 10;\n  mesh.position.y = (Math.random() - 0.5) * 10;\n  mesh.position.z = (Math.random() - 0.5) * 10;\n\n  scene.add(mesh);\n}\n\n// add lights\nconst light1 = new THREE.PointLight(0xffffff, 1, 1000);\n\nlight1.position.set(0, 0, 0);\nscene.add(light1);\n\nconst light2 = new THREE.PointLight(0xffffff, 2, 1000);\n\nlight2.position.set(0, 0, 25);\nscene.add(light2);\n\n// render function\nfunction render() {\n  requestAnimationFrame(render);\n\n  renderer.render(scene, camera);\n}\n\nfunction onMouseMove(event) {\n  event.preventDefault();\n\n  mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n  mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n  raycaster.setFromCamera(mouse, camera);\n\n  const intersects = raycaster.intersectObjects(scene.children, true);\n\n  for (let i = 0; i < intersects.length; i += 1) {\n    const { object } = intersects[i];\n    const timeline = new TimelineMax();\n\n    timeline.to(object.scale, 1, { x: 2, ease: Power1.easeOut });\n    timeline.to(object.scale, 0.5, { x: 0.5, ease: Power1.easeInOut });\n    timeline.to(object.position, 0.5, { x: 2, ease: Power1.easeOut });\n    timeline.to(object.rotation, 0.5, { y: Math.PI * 0.5, ease: Power1.easeOut }, '=-1.5');\n  }\n}\n\nrender();\n\nwindow.addEventListener('click', onMouseMove);\n"],"sourceRoot":""}